/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.*;
import model.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class FormQuanLy extends javax.swing.JPanel {

    DefaultTableModel tm;
    private boolean dangThem;
    private String fthietbi, fphong, fquanly;
    private List <Phong> plist;
    private List <ThietBi> tblist;
    private List <QLTB> qllist;

    public void loadPhong(){
        try{
            File f = new File(fphong);
            if(f.exists())
                plist = IOFile.readF(fphong);
            else
                f.createNewFile();
        }catch(IOException e){
            JOptionPane.showMessageDialog(this, "Lỗi file!");
        }
        if(plist == null)
            plist = new ArrayList<>();
        cacmaphong.removeAllItems();
        cacmaphong.addItem("-------");
        for(Phong ele:plist)
            cacmaphong.addItem(ele.getMa() + "");
    }
    public void loadTB(){
        try{
            File f = new File(fthietbi);
            if(f.exists())
                tblist = IOFile.readF(fthietbi);
            else
                f.createNewFile();
        }catch(IOException e){
            JOptionPane.showMessageDialog(this, "Lỗi file!");
        }
        if(tblist == null)
            tblist = new ArrayList<>();
        cacmathietbi.removeAllItems();
        cacmathietbi.addItem("-------");
        for(ThietBi ele:tblist)
            cacmathietbi.addItem(ele.getMa() + "");
    }
    public void loadData(){
        loadPhong();
        loadTB();
        try{
            File f = new File(fquanly);
            if(f.exists()){
                qllist = IOFile.readF(fquanly);
            }
            else
                f.createNewFile();
        }catch(IOException e){
            JOptionPane.showMessageDialog(this, "Lỗi file!");
        }
        if(qllist == null)
            qllist = new ArrayList<>();
    }
    public boolean trung2Ma(String maPhong, String maTB){
        for(QLTB ele:qllist){
            if(Integer.parseInt(maPhong) == ele.getP().getMa() && Integer.parseInt(maTB) == ele.getTb().getMa())
                return true;
        }
        return false;
    }
    public FormQuanLy(){
        initComponents();
        String[] cols = {"Mã phòng", "Tên phòng", "Mã thiết bị", "Tên thiết bị", "Số lượng", "Tình trạng"};
        tm = new DefaultTableModel(cols, 0);
        jTable1.setModel(tm);
        dangThem = false;
        buttonState(true);
        updateContentState();
        fthietbi = "src/controller/TB.DAT";
        fphong = "src/controller/PH.DAT";
        fquanly = "src/controller/QLTB.DAT";
        loadData();
    }
    private void buttonState(boolean b){
        them.setEnabled(b);
        capNhat.setEnabled(!b);
        boQua.setEnabled(!b);
    }
    private void updateContentState(){
        if(dangThem){
            cacmaphong.setEnabled(true);
            cacmathietbi.setEnabled(true);
            soLuong.setEnabled(true);
            status.setEnabled(true);
        }
        else{
            cacmaphong.setSelectedIndex(0);
            cacmaphong.setEnabled(false);
            cacmathietbi.setSelectedIndex(0);
            cacmathietbi.setEnabled(false);
            soLuong.setText("");
            soLuong.setEnabled(false);
            status.setText("");
            status.setEnabled(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        them = new javax.swing.JButton();
        hienThi = new javax.swing.JButton();
        luuVaoFIile = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        JLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        soLuong = new javax.swing.JTextField();
        status = new javax.swing.JTextField();
        capNhat = new javax.swing.JButton();
        boQua = new javax.swing.JButton();
        cacmaphong = new javax.swing.JComboBox<>();
        cacmathietbi = new javax.swing.JComboBox<>();
        loaisapxep = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(900, 750));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        them.setText("Thêm");
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });

        hienThi.setText("Cập nhật từ file");
        hienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hienThiActionPerformed(evt);
            }
        });

        luuVaoFIile.setText("Lưu vào file");
        luuVaoFIile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luuVaoFIileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(hienThi, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(luuVaoFIile, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(them)
                    .addComponent(hienThi)
                    .addComponent(luuVaoFIile))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel2.setPreferredSize(new java.awt.Dimension(300, 300));

        JLabel1.setText("Mã phòng:");

        jLabel2.setText("Mã thiết bị:");

        jLabel3.setText("Số lượng:");

        jLabel4.setText("Tình trạng TB:");

        soLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soLuongActionPerformed(evt);
            }
        });

        capNhat.setText("Cập nhật");
        capNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capNhatActionPerformed(evt);
            }
        });

        boQua.setText("Bỏ qua");
        boQua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boQuaActionPerformed(evt);
            }
        });

        cacmaphong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cacmathietbi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(capNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(boQua, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JLabel1)
                            .addComponent(jLabel2))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cacmathietbi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cacmaphong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(soLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(status))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabel1)
                    .addComponent(cacmaphong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cacmathietbi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(soLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capNhat)
                    .addComponent(boQua))
                .addGap(45, 45, 45))
        );

        loaisapxep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Lựa chọn sắp xếp --", "Theo tên phòng", "Theo số lượng thiết bị (giảm dần)" }));
        loaisapxep.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                loaisapxepItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(loaisapxep, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loaisapxep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void soLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_soLuongActionPerformed

    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed
        buttonState(false);
        dangThem = true;
        updateContentState();
        cacmaphong.requestFocus();
    }//GEN-LAST:event_themActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        if(row < 0 || row > jTable1.getRowCount()-1){
            JOptionPane.showMessageDialog(this, "Chọn hàng");
        }
        else{
            for(int i=0; i<cacmaphong.getItemCount(); i++){
                if(cacmaphong.getItemAt(i).equalsIgnoreCase(tm.getValueAt(row, 0).toString())){
                    cacmaphong.setSelectedIndex(i);
                    break;
                }
            }
            for(int i=0; i<cacmathietbi.getItemCount(); i++){
                if(cacmathietbi.getItemAt(i).equalsIgnoreCase(tm.getValueAt(row, 2).toString())){
                    cacmathietbi.setSelectedIndex(i);
                    break;
                }
            }
            soLuong.setText(tm.getValueAt(row, 4).toString());
            status.setText(tm.getValueAt(row, 5).toString());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void hienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hienThiActionPerformed
        loadData();
        tm.setRowCount(0);
        for(QLTB ele:qllist){
            tm.addRow(ele.toObject());
        }
    }//GEN-LAST:event_hienThiActionPerformed

    private void luuVaoFIileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luuVaoFIileActionPerformed
        IOFile.writeF(fquanly, qllist);
        IOFile.writeF(fthietbi, tblist);
        IOFile.writeF(fphong, plist);
    }//GEN-LAST:event_luuVaoFIileActionPerformed
    
    public ThietBi getTBByMa(int ma){
        loadTB();
        for(ThietBi ele:tblist){
            if(ele.getMa() == ma)
                return ele;
        }
        return null;
    }
    public Phong getPhongByMa(int ma){
        loadPhong();
        for(Phong ele:plist){
            if(ele.getMa() == ma)
                return ele;
        }
        return null;
    }
    private void capNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capNhatActionPerformed
        try{
            String maP, maTB, solg, tinhtrang;
            maP = cacmaphong.getSelectedItem().toString();
            maTB = cacmathietbi.getSelectedItem().toString();
            solg = soLuong.getText();
            tinhtrang = status.getText();
            int type = 0;
            if(tinhtrang.isEmpty())
                type = 4;
            if(solg.isEmpty())
                type = 3;
            if(maTB.contains("-"))
                type = 2;
            if(maP.contains("-"))
                type = 1;
            if(type != 0)
                throw new TrongEx(type);
            int sl = Integer.parseInt(solg);
            if(sl < 1)
                throw new SLEx();
            if(trung2Ma(maP, maTB)){
                JOptionPane.showMessageDialog(this, "Trùng 2 mã");
                cacmaphong.requestFocus();
                return;
            }
            ThietBi stmp = getTBByMa(Integer.parseInt(maTB));
            if(sl > stmp.getSoluong()){
                JOptionPane.showMessageDialog(this, "Không đủ thiết bị");
                soLuong.requestFocus();
                return;                
            }
            Phong bdtmp = getPhongByMa(Integer.parseInt(maP));
            QLTB ql = new QLTB(stmp, bdtmp, sl, tinhtrang);
            stmp.setSoluong(stmp.getSoluong() - sl);
            if(dangThem){
                tm.addRow(ql.toObject());
                qllist.add(ql);
            }
            buttonState(true);
            dangThem = false;
            updateContentState();
        }catch(TrongEx e){
            JOptionPane.showMessageDialog(this, "Không được để trống nhé!");
            if(e.type == 1)
                cacmaphong.requestFocus();
            else if(e.type == 2)
                cacmathietbi.requestFocus();
            else if(e.type == 3)
                soLuong.requestFocus();
            else
                status.requestFocus();
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Phải ghi số!");
            soLuong.requestFocus();
        }catch(SLEx e){
            JOptionPane.showMessageDialog(this, "Phải ghi số dương!");
            soLuong.requestFocus();
        }
    }//GEN-LAST:event_capNhatActionPerformed

    private void boQuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boQuaActionPerformed
        buttonState(true);
        dangThem = false;
        updateContentState();
    }//GEN-LAST:event_boQuaActionPerformed

    private void loaisapxepItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_loaisapxepItemStateChanged
        switch(loaisapxep.getSelectedIndex()){
            case 1:
                qllist.sort(new Comparator<QLTB>(){
                    @Override
                    public int compare(QLTB o1, QLTB o2) {
                        String[] lten1 = o1.getP().getTen().split("\\s+");
                        String[] lten2 = o2.getP().getTen().split("\\s+");
                        String ten1 = lten1[lten1.length-1];
                        String ten2 = lten2[lten2.length-1];
                        if(ten1.equalsIgnoreCase(ten2)){
                            return o1.getP().getTen().compareToIgnoreCase(o2.getP().getTen());
                        }
                        return ten1.compareToIgnoreCase(ten2);
                    }
                });
                break;
            case 2:
                qllist.sort(new Comparator<QLTB>(){
                    @Override
                    public int compare(QLTB o1, QLTB o2) {
                        return Integer.compare(o2.getSoLuong(), o1.getSoLuong());
                    }
                });
                break;
            default:
                break;
        }
        tm.setRowCount(0);
        for(QLTB ele:qllist){
            tm.addRow(ele.toObject());
        }
    }//GEN-LAST:event_loaisapxepItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel1;
    private javax.swing.JButton boQua;
    private javax.swing.JComboBox<String> cacmaphong;
    private javax.swing.JComboBox<String> cacmathietbi;
    private javax.swing.JButton capNhat;
    private javax.swing.JButton hienThi;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> loaisapxep;
    private javax.swing.JButton luuVaoFIile;
    private javax.swing.JTextField soLuong;
    private javax.swing.JTextField status;
    private javax.swing.JButton them;
    // End of variables declaration//GEN-END:variables
}
